version: '3.8'

services:
  # Redis - no external ports in production
  redis:
    ports: []
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL - no external ports in production
  postgres:
    ports: []
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_PROD:-postgres}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend - only accessible via nginx
  backend:
    ports: []
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5173
      # Use production Redis URL
      REDIS_URL: redis://redis:6379
      # Production API URLs
      FRONTEND_URL: https://ceci-ai.ceci.org.il
      # Force unbuffered output
      FORCE_COLOR: 1
      DEBUG: '*'
      # Bot service URLs
      DECISION_GUIDE_BOT_URL: http://decision-guide-bot:8018
      USE_UNIFIED_INTENT: 'true'
      USE_LLM_FORMATTER: 'true'
      UNIFIED_INTENT_BOT_URL: http://unified-intent-bot:8011
      LLM_FORMATTER_BOT_URL: http://llm-formatter-bot:8017
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  # Frontend
  frontend:
    restart: always
    environment:
      NODE_ENV: production
      # API URL should be relative for production
      VITE_API_URL: /api
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx – production configuration
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./deploy/nginx/nginx.prod.conf:/etc/nginx/templates/default.conf.template:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    environment:
      - DOMAIN_NAME=ceci-ai.ceci.org.il
    command:
      - sh
      - -c
      - |
        # Render the template into a writable location
        envsubst '$DOMAIN_NAME' \
          < /etc/nginx/templates/default.conf.template \
          > /tmp/nginx.conf
        # Start nginx using that generated file
        exec nginx -g 'daemon off;' -c /tmp/nginx.conf
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
        reservations:
          cpus: '0.25'
          memory: 128M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Bot services - no external ports in production
  # Unified Intent Bot (replaces rewrite-bot and intent-bot)
  unified-intent-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  sql-gen-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  context-router-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  evaluator-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  clarify-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  ranker-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # LLM Formatter Bot (replaces formatter-bot)
  llm-formatter-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Decision Guide Bot
  decision-guide-bot:
    ports: []
    restart: always
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

   # Certbot – automatic renewal loop
  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint:
      - sh
      - -c
      - |
        trap exit TERM
        while true; do
          certbot renew
          sleep 12h
        done
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"
        
# Production volumes
volumes:
  postgres_data_prod:
    driver: local

# Use the same network from base compose
networks:
  ceci-network:
    external: true
    name: ceci-ai-prod-network