version: '3.8'

services:
  # Redis - no external ports in production
  redis:
    ports: []
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # PostgreSQL - no external ports in production
  postgres:
    ports: []
    restart: always
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_PROD:-postgres}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Backend - only accessible via nginx
  backend:
    ports: []
    restart: always
    networks:
      - ceci-network
    environment:
      NODE_ENV: production
      PORT: 5173
      REDIS_URL: redis://redis:6379
      FRONTEND_URL: https://ceci-ai.ceci.org.il
      FORCE_COLOR: 1
      DEBUG: '*'
      DECISION_GUIDE_BOT_URL: http://decision-guide-bot:8018
      USE_UNIFIED_INTENT: 'true'
      USE_LLM_FORMATTER: 'true'
      UNIFIED_INTENT_BOT_URL: http://unified-intent-bot:8011
      LLM_FORMATTER_BOT_URL: http://llm-formatter-bot:8017
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '1'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  # Frontend
  frontend:
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      NODE_ENV: production
      VITE_API_URL: /api
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Nginx – production configuration (static, pre-rendered)
  nginx:
    build:
      context: ./deploy/nginx
      dockerfile: Dockerfile
    restart: always
    networks:
      - ceci-network
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # This is the file you pre-built with envsubst on the host
      - ./deploy/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/conf:/etc/letsencrypt:ro
      - ./certbot/www:/var/www/certbot:ro
    depends_on:
      - frontend
      - backend
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Unified Intent Bot
  unified-intent-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "20m"
        max-file: "5"

  # SQL Generation Bot
  sql-gen-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Context Router Bot
  context-router-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Evaluator Bot
  evaluator-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Clarify Bot
  clarify-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Ranker Bot
  ranker-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # LLM Formatter Bot
  llm-formatter-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Decision Guide Bot
  decision-guide-bot:
    ports: []
    restart: always
    networks:
      - ceci-network
    env_file:
      - .env.prod
    environment:
      LOG_LEVEL: ${LOG_LEVEL:-INFO}
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # Certbot – automatic renewal loop
  certbot:
    image: certbot/certbot:latest
    restart: unless-stopped
    networks:
      - ceci-network
    volumes:
      - ./certbot/conf:/etc/letsencrypt
      - ./certbot/www:/var/www/certbot
    entrypoint:
      - sh
      - -c
      - |
        trap exit TERM
        while true; do
          certbot renew
          sleep 12h
        done
    logging:
      driver: "json-file"
      options:
        max-size: "5m"
        max-file: "2"

volumes:
  postgres_data_prod:
    driver: local

networks:
  ceci-network:
    external: true
    name: ceci-ai-prod-network
